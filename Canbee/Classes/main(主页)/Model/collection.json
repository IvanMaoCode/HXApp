<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>$schema</key>
	<string>http://json-schema.org/draft-04/schema#</string>
	<key>definitions</key>
	<dict>
		<key>auth</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Represents authentication helpers provided by Postman</string>
			<key>id</key>
			<string>#/definitions/auth</string>
			<key>properties</key>
			<dict>
				<key>apikey</key>
				<dict>
					<key>description</key>
					<string>The attributes for API Key Authentication.</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>API Key Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>awsv4</key>
				<dict>
					<key>description</key>
					<string>The attributes for [AWS Auth](http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html).</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>AWS Signature v4</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>basic</key>
				<dict>
					<key>description</key>
					<string>The attributes for [Basic Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication).</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>Basic Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>bearer</key>
				<dict>
					<key>description</key>
					<string>The helper attributes for [Bearer Token Authentication](https://tools.ietf.org/html/rfc6750)</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>Bearer Token Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>digest</key>
				<dict>
					<key>description</key>
					<string>The attributes for [Digest Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication).</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>Digest Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>hawk</key>
				<dict>
					<key>description</key>
					<string>The attributes for [Hawk Authentication](https://github.com/hueniverse/hawk)</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>Hawk Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>noauth</key>
				<dict/>
				<key>ntlm</key>
				<dict>
					<key>description</key>
					<string>The attributes for [NTLM Authentication](https://msdn.microsoft.com/en-us/library/cc237488.aspx)</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>NTLM Authentication</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>oauth1</key>
				<dict>
					<key>description</key>
					<string>The attributes for [OAuth2](https://oauth.net/1/)</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>OAuth1</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>oauth2</key>
				<dict>
					<key>description</key>
					<string>Helper attributes for [OAuth2](https://oauth.net/2/)</string>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/auth-attribute</string>
					</dict>
					<key>title</key>
					<string>OAuth2</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>type</key>
				<dict>
					<key>enum</key>
					<array>
						<string>apikey</string>
						<string>awsv4</string>
						<string>basic</string>
						<string>bearer</string>
						<string>digest</string>
						<string>hawk</string>
						<string>noauth</string>
						<string>oauth1</string>
						<string>oauth2</string>
						<string>ntlm</string>
					</array>
					<key>type</key>
					<string>string</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>type</string>
			</array>
			<key>title</key>
			<string>Auth</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>auth-attribute</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Represents an attribute for any authorization method provided by Postman. For example `username` and `password` are set as auth attributes for Basic Authentication method.</string>
			<key>id</key>
			<string>#/definitions/auth-attribute</string>
			<key>properties</key>
			<dict>
				<key>key</key>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>type</key>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>value</key>
				<dict/>
			</dict>
			<key>required</key>
			<array>
				<string>key</string>
			</array>
			<key>title</key>
			<string>Auth</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>certificate</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A representation of an ssl certificate</string>
			<key>id</key>
			<string>#/definitions/certificate</string>
			<key>properties</key>
			<dict>
				<key>cert</key>
				<dict>
					<key>description</key>
					<string>An object containing path to file certificate, on the file system</string>
					<key>properties</key>
					<dict>
						<key>src</key>
						<dict>
							<key>description</key>
							<string>The path to file containing key for certificate, on the file system</string>
						</dict>
					</dict>
					<key>type</key>
					<string>object</string>
				</dict>
				<key>key</key>
				<dict>
					<key>description</key>
					<string>An object containing path to file containing private key, on the file system</string>
					<key>properties</key>
					<dict>
						<key>src</key>
						<dict>
							<key>description</key>
							<string>The path to file containing key for certificate, on the file system</string>
						</dict>
					</dict>
					<key>type</key>
					<string>object</string>
				</dict>
				<key>matches</key>
				<dict>
					<key>description</key>
					<string>A list of Url match pattern strings, to identify Urls this certificate can be used for.</string>
					<key>item</key>
					<dict>
						<key>description</key>
						<string>An Url match pattern string</string>
						<key>type</key>
						<string>string</string>
					</dict>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>A name for the certificate for user reference</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>passphrase</key>
				<dict>
					<key>description</key>
					<string>The passphrase for the certificate</string>
					<key>type</key>
					<string>string</string>
				</dict>
			</dict>
			<key>title</key>
			<string>Certificate</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>certificate-list</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A representation of a list of ssl certificates</string>
			<key>id</key>
			<string>#/definitions/certificate-list</string>
			<key>items</key>
			<dict>
				<key>$ref</key>
				<string>#/definitions/certificate</string>
			</dict>
			<key>title</key>
			<string>Certificate List</string>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>cookie</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A Cookie, that follows the [Google Chrome format](https://developer.chrome.com/extensions/cookies)</string>
			<key>id</key>
			<string>#/definitions/cookie</string>
			<key>properties</key>
			<dict>
				<key>domain</key>
				<dict>
					<key>description</key>
					<string>The domain for which this cookie is valid.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>expires</key>
				<dict>
					<key>description</key>
					<string>When the cookie expires.</string>
					<key>oneOf</key>
					<array>
						<dict>
							<key>type</key>
							<string>string</string>
						</dict>
						<dict>
							<key>type</key>
							<string>number</string>
						</dict>
					</array>
				</dict>
				<key>extensions</key>
				<dict>
					<key>description</key>
					<string>Custom attributes for a cookie go here, such as the [Priority Field](https://code.google.com/p/chromium/issues/detail?id=232693)</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>hostOnly</key>
				<dict>
					<key>description</key>
					<string>True if the cookie is a host-only cookie. (i.e. a request's URL domain must exactly match the domain of the cookie).</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>httpOnly</key>
				<dict>
					<key>description</key>
					<string>Indicates if this cookie is HTTP Only. (if True, the cookie is inaccessible to client-side scripts)</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>maxAge</key>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>This is the name of the Cookie.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>path</key>
				<dict>
					<key>description</key>
					<string>The path associated with the Cookie.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>secure</key>
				<dict>
					<key>description</key>
					<string>Indicates if the 'secure' flag is set on the Cookie, meaning that it is transmitted over secure connections only. (typically HTTPS)</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>session</key>
				<dict>
					<key>description</key>
					<string>True if the cookie is a session cookie.</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>value</key>
				<dict>
					<key>description</key>
					<string>The value of the Cookie.</string>
					<key>type</key>
					<string>string</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>domain</string>
				<string>path</string>
			</array>
			<key>title</key>
			<string>Cookie</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>cookie-list</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A representation of a list of cookies</string>
			<key>id</key>
			<string>#/definitions/cookie-list</string>
			<key>items</key>
			<dict>
				<key>$ref</key>
				<string>#/definitions/cookie</string>
			</dict>
			<key>title</key>
			<string>Certificate List</string>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>description</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A Description can be a raw text, or be an object, which holds the description along with its format.</string>
			<key>id</key>
			<string>#/definitions/description</string>
			<key>oneOf</key>
			<array>
				<dict>
					<key>properties</key>
					<dict>
						<key>content</key>
						<dict>
							<key>description</key>
							<string>The content of the description goes here, as a raw string.</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>type</key>
						<dict>
							<key>description</key>
							<string>Holds the mime type of the raw description content. E.g: 'text/markdown' or 'text/html'.
The type is used to correctly render the description when generating documentation, or in the Postman app.</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>version</key>
						<dict>
							<key>description</key>
							<string>Description can have versions associated with it, which should be put in this property.</string>
						</dict>
					</dict>
					<key>title</key>
					<string>Description</string>
					<key>type</key>
					<string>object</string>
				</dict>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
				<dict>
					<key>type</key>
					<string>null</string>
				</dict>
			</array>
		</dict>
		<key>event</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Defines a script associated with an associated event name</string>
			<key>id</key>
			<string>#/definitions/event</string>
			<key>properties</key>
			<dict>
				<key>disabled</key>
				<dict>
					<key>default</key>
					<false/>
					<key>description</key>
					<string>Indicates whether the event is disabled. If absent, the event is assumed to be enabled.</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>id</key>
				<dict>
					<key>description</key>
					<string>A unique identifier for the enclosing event.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>listen</key>
				<dict>
					<key>description</key>
					<string>Can be set to `test` or `prerequest` for test scripts or pre-request scripts respectively.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>script</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/script</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>listen</string>
			</array>
			<key>title</key>
			<string>Event</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>event-list</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Postman allows you to configure scripts to run when specific events occur. These scripts are stored here, and can be referenced in the collection by their ID.</string>
			<key>id</key>
			<string>#/definitions/event-list</string>
			<key>items</key>
			<dict>
				<key>$ref</key>
				<string>#/definitions/event</string>
			</dict>
			<key>title</key>
			<string>Event List</string>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>header</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Represents a single HTTP Header</string>
			<key>id</key>
			<string>#/definitions/header</string>
			<key>properties</key>
			<dict>
				<key>description</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/description</string>
				</dict>
				<key>disabled</key>
				<dict>
					<key>default</key>
					<false/>
					<key>description</key>
					<string>If set to true, the current header will not be sent with requests.</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>key</key>
				<dict>
					<key>description</key>
					<string>This holds the LHS of the HTTP Header, e.g ``Content-Type`` or ``X-Custom-Header``</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>value</key>
				<dict>
					<key>description</key>
					<string>The value (or the RHS) of the Header is stored in this field.</string>
					<key>type</key>
					<string>string</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>key</string>
				<string>value</string>
			</array>
			<key>title</key>
			<string>Header</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>header-list</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A representation for a list of headers</string>
			<key>id</key>
			<string>#/definitions/header-list</string>
			<key>items</key>
			<dict>
				<key>$ref</key>
				<string>#/definitions/header</string>
			</dict>
			<key>title</key>
			<string>Header List</string>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>info</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Detailed description of the info block</string>
			<key>id</key>
			<string>#/definitions/info</string>
			<key>properties</key>
			<dict>
				<key>_postman_id</key>
				<dict>
					<key>description</key>
					<string>Every collection is identified by the unique value of this field. The value of this field is usually easiest to generate using a UID generator function. If you already have a collection, it is recommended that you maintain the same id since changing the id usually implies that is a different collection than it was originally.
 *Note: This field exists for compatibility reasons with Collection Format V1.*</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>description</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/description</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>A collection's friendly name is defined by this field. You would want to set this field to a value that would allow you to easily identify this collection among a bunch of other collections, as such outlining its usage or content.</string>
					<key>title</key>
					<string>Name of the collection</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>schema</key>
				<dict>
					<key>description</key>
					<string>This should ideally hold a link to the Postman schema that is used to validate this collection. E.g: https://schema.getpostman.com/collection/v1</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>version</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/version</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>name</string>
				<string>schema</string>
			</array>
			<key>title</key>
			<string>Information</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>item</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Items are entities which contain an actual HTTP request, and sample responses attached to it.</string>
			<key>id</key>
			<string>#/definitions/item</string>
			<key>properties</key>
			<dict>
				<key>description</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/description</string>
				</dict>
				<key>event</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/event-list</string>
				</dict>
				<key>id</key>
				<dict>
					<key>description</key>
					<string>A unique ID that is used to identify collections internally</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>A human readable identifier for the current item.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>protocolProfileBehavior</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/protocol-profile-behavior</string>
				</dict>
				<key>request</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/request</string>
				</dict>
				<key>response</key>
				<dict>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/response</string>
					</dict>
					<key>title</key>
					<string>Responses</string>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>variable</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/variable-list</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>request</string>
			</array>
			<key>title</key>
			<string>Item</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>item-group</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>One of the primary goals of Postman is to organize the development of APIs. To this end, it is necessary to be able to group requests together. This can be achived using 'Folders'. A folder just is an ordered set of requests.</string>
			<key>id</key>
			<string>#/definitions/item-group</string>
			<key>properties</key>
			<dict>
				<key>auth</key>
				<dict>
					<key>oneOf</key>
					<array>
						<dict>
							<key>type</key>
							<string>null</string>
						</dict>
						<dict>
							<key>$ref</key>
							<string>#/definitions/auth</string>
						</dict>
					</array>
				</dict>
				<key>description</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/description</string>
				</dict>
				<key>event</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/event-list</string>
				</dict>
				<key>item</key>
				<dict>
					<key>description</key>
					<string>Items are entities which contain an actual HTTP request, and sample responses attached to it. Folders may contain many items.</string>
					<key>items</key>
					<dict>
						<key>anyOf</key>
						<array>
							<dict>
								<key>$ref</key>
								<string>#/definitions/item</string>
							</dict>
							<dict>
								<key>$ref</key>
								<string>#/definitions/item-group</string>
							</dict>
						</array>
						<key>title</key>
						<string>Items</string>
					</dict>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>A folder's friendly name is defined by this field. You would want to set this field to a value that would allow you to easily identify this folder.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>protocolProfileBehavior</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/protocol-profile-behavior</string>
				</dict>
				<key>variable</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/variable-list</string>
				</dict>
			</dict>
			<key>required</key>
			<array>
				<string>item</string>
			</array>
			<key>title</key>
			<string>Folder</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>protocol-profile-behavior</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Set of configurations used to alter the usual behavior of sending the request</string>
			<key>id</key>
			<string>#/definitions/protocol-profile-behavior</string>
			<key>title</key>
			<string>Protocol Profile Behavior</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>proxy-config</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Using the Proxy, you can configure your custom proxy into the postman for particular url match</string>
			<key>id</key>
			<string>#/definitions/proxy-config</string>
			<key>properties</key>
			<dict>
				<key>disabled</key>
				<dict>
					<key>default</key>
					<false/>
					<key>description</key>
					<string>When set to true, ignores this proxy configuration entity</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>host</key>
				<dict>
					<key>description</key>
					<string>The proxy server host</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>match</key>
				<dict>
					<key>default</key>
					<string>http+https://*/*</string>
					<key>description</key>
					<string>The Url match for which the proxy config is defined</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>port</key>
				<dict>
					<key>default</key>
					<integer>8080</integer>
					<key>description</key>
					<string>The proxy server port</string>
					<key>minimum</key>
					<integer>0</integer>
					<key>type</key>
					<string>integer</string>
				</dict>
				<key>tunnel</key>
				<dict>
					<key>default</key>
					<false/>
					<key>description</key>
					<string>The tunneling details for the proxy config</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
			</dict>
			<key>title</key>
			<string>Proxy Config</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>request</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A request represents an HTTP request. If a string, the string is assumed to be the request URL and the method is assumed to be 'GET'.</string>
			<key>id</key>
			<string>#/definitions/request</string>
			<key>oneOf</key>
			<array>
				<dict>
					<key>properties</key>
					<dict>
						<key>auth</key>
						<dict>
							<key>oneOf</key>
							<array>
								<dict>
									<key>type</key>
									<string>null</string>
								</dict>
								<dict>
									<key>$ref</key>
									<string>#/definitions/auth</string>
								</dict>
							</array>
						</dict>
						<key>body</key>
						<dict>
							<key>oneOf</key>
							<array>
								<dict>
									<key>description</key>
									<string>This field contains the data usually contained in the request body.</string>
									<key>properties</key>
									<dict>
										<key>disabled</key>
										<dict>
											<key>default</key>
											<false/>
											<key>description</key>
											<string>When set to true, prevents request body from being sent.</string>
											<key>type</key>
											<string>boolean</string>
										</dict>
										<key>file</key>
										<dict>
											<key>properties</key>
											<dict>
												<key>content</key>
												<dict>
													<key>type</key>
													<string>string</string>
												</dict>
												<key>src</key>
												<dict>
													<key>oneOf</key>
													<array>
														<dict>
															<key>description</key>
															<string>Contains the name of the file to upload. _Not the path_.</string>
															<key>type</key>
															<string>string</string>
														</dict>
														<dict>
															<key>description</key>
															<string>A null src indicates that no file has been selected as a part of the request body</string>
															<key>type</key>
															<string>null</string>
														</dict>
													</array>
												</dict>
											</dict>
											<key>type</key>
											<string>object</string>
										</dict>
										<key>formdata</key>
										<dict>
											<key>items</key>
											<dict>
												<key>oneOf</key>
												<array>
													<dict>
														<key>properties</key>
														<dict>
															<key>contentType</key>
															<dict>
																<key>description</key>
																<string>Override Content-Type header of this form data entity.</string>
																<key>type</key>
																<string>string</string>
															</dict>
															<key>description</key>
															<dict>
																<key>$ref</key>
																<string>#/definitions/description</string>
															</dict>
															<key>disabled</key>
															<dict>
																<key>default</key>
																<false/>
																<key>description</key>
																<string>When set to true, prevents this form data entity from being sent.</string>
																<key>type</key>
																<string>boolean</string>
															</dict>
															<key>key</key>
															<dict>
																<key>type</key>
																<string>string</string>
															</dict>
															<key>type</key>
															<dict>
																<key>enum</key>
																<array>
																	<string>text</string>
																</array>
																<key>type</key>
																<string>string</string>
															</dict>
															<key>value</key>
															<dict>
																<key>type</key>
																<string>string</string>
															</dict>
														</dict>
														<key>required</key>
														<array>
															<string>key</string>
														</array>
													</dict>
													<dict>
														<key>properties</key>
														<dict>
															<key>contentType</key>
															<dict>
																<key>description</key>
																<string>Override Content-Type header of this form data entity.</string>
																<key>type</key>
																<string>string</string>
															</dict>
															<key>description</key>
															<dict>
																<key>$ref</key>
																<string>#/definitions/description</string>
															</dict>
															<key>disabled</key>
															<dict>
																<key>default</key>
																<false/>
																<key>description</key>
																<string>When set to true, prevents this form data entity from being sent.</string>
																<key>type</key>
																<string>boolean</string>
															</dict>
															<key>key</key>
															<dict>
																<key>type</key>
																<string>string</string>
															</dict>
															<key>src</key>
															<dict>
																<key>oneOf</key>
																<array>
																	<dict>
																		<key>type</key>
																		<string>string</string>
																	</dict>
																	<dict>
																		<key>type</key>
																		<string>null</string>
																	</dict>
																	<dict>
																		<key>type</key>
																		<string>array</string>
																	</dict>
																</array>
															</dict>
															<key>type</key>
															<dict>
																<key>enum</key>
																<array>
																	<string>file</string>
																</array>
																<key>type</key>
																<string>string</string>
															</dict>
														</dict>
														<key>required</key>
														<array>
															<string>key</string>
														</array>
													</dict>
												</array>
												<key>title</key>
												<string>FormParameter</string>
												<key>type</key>
												<string>object</string>
											</dict>
											<key>type</key>
											<string>array</string>
										</dict>
										<key>graphql</key>
										<dict>
											<key>type</key>
											<string>object</string>
										</dict>
										<key>mode</key>
										<dict>
											<key>description</key>
											<string>Postman stores the type of data associated with this request in this field.</string>
											<key>enum</key>
											<array>
												<string>raw</string>
												<string>urlencoded</string>
												<string>formdata</string>
												<string>file</string>
												<string>graphql</string>
											</array>
										</dict>
										<key>raw</key>
										<dict>
											<key>type</key>
											<string>string</string>
										</dict>
										<key>urlencoded</key>
										<dict>
											<key>items</key>
											<dict>
												<key>properties</key>
												<dict>
													<key>description</key>
													<dict>
														<key>$ref</key>
														<string>#/definitions/description</string>
													</dict>
													<key>disabled</key>
													<dict>
														<key>default</key>
														<false/>
														<key>type</key>
														<string>boolean</string>
													</dict>
													<key>key</key>
													<dict>
														<key>type</key>
														<string>string</string>
													</dict>
													<key>value</key>
													<dict>
														<key>type</key>
														<string>string</string>
													</dict>
												</dict>
												<key>required</key>
												<array>
													<string>key</string>
												</array>
												<key>title</key>
												<string>UrlEncodedParameter</string>
												<key>type</key>
												<string>object</string>
											</dict>
											<key>type</key>
											<string>array</string>
										</dict>
									</dict>
									<key>type</key>
									<string>object</string>
								</dict>
								<dict>
									<key>type</key>
									<string>null</string>
								</dict>
							</array>
						</dict>
						<key>certificate</key>
						<dict>
							<key>$ref</key>
							<string>#/definitions/certificate</string>
						</dict>
						<key>description</key>
						<dict>
							<key>$ref</key>
							<string>#/definitions/description</string>
						</dict>
						<key>header</key>
						<dict>
							<key>oneOf</key>
							<array>
								<dict>
									<key>$ref</key>
									<string>#/definitions/header-list</string>
								</dict>
								<dict>
									<key>type</key>
									<string>string</string>
								</dict>
							</array>
						</dict>
						<key>method</key>
						<dict>
							<key>anyOf</key>
							<array>
								<dict>
									<key>description</key>
									<string>The Standard HTTP method associated with this request.</string>
									<key>enum</key>
									<array>
										<string>GET</string>
										<string>PUT</string>
										<string>POST</string>
										<string>PATCH</string>
										<string>DELETE</string>
										<string>COPY</string>
										<string>HEAD</string>
										<string>OPTIONS</string>
										<string>LINK</string>
										<string>UNLINK</string>
										<string>PURGE</string>
										<string>LOCK</string>
										<string>UNLOCK</string>
										<string>PROPFIND</string>
										<string>VIEW</string>
									</array>
									<key>type</key>
									<string>string</string>
								</dict>
								<dict>
									<key>description</key>
									<string>The Custom HTTP method associated with this request.</string>
									<key>type</key>
									<string>string</string>
								</dict>
							</array>
						</dict>
						<key>proxy</key>
						<dict>
							<key>$ref</key>
							<string>#/definitions/proxy-config</string>
						</dict>
						<key>url</key>
						<dict>
							<key>$ref</key>
							<string>#/definitions/url</string>
						</dict>
					</dict>
					<key>title</key>
					<string>Request</string>
					<key>type</key>
					<string>object</string>
				</dict>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
			</array>
			<key>title</key>
			<string>Request</string>
		</dict>
		<key>response</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A response represents an HTTP response.</string>
			<key>id</key>
			<string>#/definitions/response</string>
			<key>properties</key>
			<dict>
				<key>body</key>
				<dict>
					<key>description</key>
					<string>The raw text of the response.</string>
					<key>type</key>
					<array>
						<string>null</string>
						<string>string</string>
					</array>
				</dict>
				<key>code</key>
				<dict>
					<key>description</key>
					<string>The numerical response code, example: 200, 201, 404, etc.</string>
					<key>type</key>
					<string>integer</string>
				</dict>
				<key>cookie</key>
				<dict>
					<key>items</key>
					<dict>
						<key>$ref</key>
						<string>#/definitions/cookie</string>
					</dict>
					<key>type</key>
					<string>array</string>
				</dict>
				<key>header</key>
				<dict>
					<key>oneOf</key>
					<array>
						<dict>
							<key>description</key>
							<string>No HTTP request is complete without its headers, and the same is true for a Postman request. This field is an array containing all the headers.</string>
							<key>items</key>
							<dict>
								<key>oneOf</key>
								<array>
									<dict>
										<key>$ref</key>
										<string>#/definitions/header</string>
									</dict>
									<dict>
										<key>title</key>
										<string>Header</string>
										<key>type</key>
										<string>string</string>
									</dict>
								</array>
							</dict>
							<key>title</key>
							<string>Header</string>
							<key>type</key>
							<string>array</string>
						</dict>
						<dict>
							<key>type</key>
							<string>string</string>
						</dict>
						<dict>
							<key>type</key>
							<string>null</string>
						</dict>
					</array>
					<key>title</key>
					<string>Headers</string>
				</dict>
				<key>id</key>
				<dict>
					<key>description</key>
					<string>A unique, user defined identifier that can  be used to refer to this response from requests.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>originalRequest</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/request</string>
				</dict>
				<key>responseTime</key>
				<dict>
					<key>description</key>
					<string>The time taken by the request to complete. If a number, the unit is milliseconds. If the response is manually created, this can be set to `null`.</string>
					<key>oneOf</key>
					<array>
						<dict>
							<key>type</key>
							<string>null</string>
						</dict>
						<dict>
							<key>type</key>
							<string>string</string>
						</dict>
						<dict>
							<key>type</key>
							<string>number</string>
						</dict>
					</array>
					<key>title</key>
					<string>ResponseTime</string>
				</dict>
				<key>status</key>
				<dict>
					<key>description</key>
					<string>The response status, e.g: '200 OK'</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>timings</key>
				<dict>
					<key>description</key>
					<string>Set of timing information related to request and response in milliseconds</string>
					<key>oneOf</key>
					<array>
						<dict>
							<key>type</key>
							<string>object</string>
						</dict>
						<dict>
							<key>type</key>
							<string>null</string>
						</dict>
					</array>
					<key>title</key>
					<string>Response Timings</string>
				</dict>
			</dict>
			<key>title</key>
			<string>Response</string>
		</dict>
		<key>script</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>A script is a snippet of Javascript code that can be used to to perform setup or teardown operations on a particular response.</string>
			<key>id</key>
			<string>#/definitions/script</string>
			<key>properties</key>
			<dict>
				<key>exec</key>
				<dict>
					<key>oneOf</key>
					<array>
						<dict>
							<key>description</key>
							<string>This is an array of strings, where each line represents a single line of code. Having lines separate makes it possible to easily track changes made to scripts.</string>
							<key>items</key>
							<dict>
								<key>type</key>
								<string>string</string>
							</dict>
							<key>type</key>
							<string>array</string>
						</dict>
						<dict>
							<key>type</key>
							<string>string</string>
						</dict>
					</array>
				</dict>
				<key>id</key>
				<dict>
					<key>description</key>
					<string>A unique, user defined identifier that can  be used to refer to this script from requests.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>Script name</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>src</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/url</string>
				</dict>
				<key>type</key>
				<dict>
					<key>description</key>
					<string>Type of the script. E.g: 'text/javascript'</string>
					<key>type</key>
					<string>string</string>
				</dict>
			</dict>
			<key>title</key>
			<string>Script</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>url</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>If object, contains the complete broken-down URL for this request. If string, contains the literal request URL.</string>
			<key>id</key>
			<string>#/definitions/url</string>
			<key>oneOf</key>
			<array>
				<dict>
					<key>properties</key>
					<dict>
						<key>hash</key>
						<dict>
							<key>description</key>
							<string>Contains the URL fragment (if any). Usually this is not transmitted over the network, but it could be useful to store this in some cases.</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>host</key>
						<dict>
							<key>description</key>
							<string>The host for the URL, E.g: api.yourdomain.com. Can be stored as a string or as an array of strings.</string>
							<key>oneOf</key>
							<array>
								<dict>
									<key>type</key>
									<string>string</string>
								</dict>
								<dict>
									<key>description</key>
									<string>The host, split into subdomain strings.</string>
									<key>items</key>
									<dict>
										<key>type</key>
										<string>string</string>
									</dict>
									<key>type</key>
									<string>array</string>
								</dict>
							</array>
							<key>title</key>
							<string>Host</string>
						</dict>
						<key>path</key>
						<dict>
							<key>oneOf</key>
							<array>
								<dict>
									<key>type</key>
									<string>string</string>
								</dict>
								<dict>
									<key>description</key>
									<string>The complete path of the current url, broken down into segments. A segment could be a string, or a path variable.</string>
									<key>items</key>
									<dict>
										<key>oneOf</key>
										<array>
											<dict>
												<key>type</key>
												<string>string</string>
											</dict>
											<dict>
												<key>properties</key>
												<dict>
													<key>type</key>
													<dict>
														<key>type</key>
														<string>string</string>
													</dict>
													<key>value</key>
													<dict>
														<key>type</key>
														<string>string</string>
													</dict>
												</dict>
												<key>type</key>
												<string>object</string>
											</dict>
										</array>
									</dict>
									<key>type</key>
									<string>array</string>
								</dict>
							</array>
						</dict>
						<key>port</key>
						<dict>
							<key>description</key>
							<string>The port number present in this URL. An empty value implies 80/443 depending on whether the protocol field contains http/https.</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>protocol</key>
						<dict>
							<key>description</key>
							<string>The protocol associated with the request, E.g: 'http'</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>query</key>
						<dict>
							<key>description</key>
							<string>An array of QueryParams, which is basically the query string part of the URL, parsed into separate variables</string>
							<key>items</key>
							<dict>
								<key>properties</key>
								<dict>
									<key>description</key>
									<dict>
										<key>$ref</key>
										<string>#/definitions/description</string>
									</dict>
									<key>disabled</key>
									<dict>
										<key>default</key>
										<false/>
										<key>description</key>
										<string>If set to true, the current query parameter will not be sent with the request.</string>
										<key>type</key>
										<string>boolean</string>
									</dict>
									<key>key</key>
									<dict>
										<key>oneOf</key>
										<array>
											<dict>
												<key>type</key>
												<string>string</string>
											</dict>
											<dict>
												<key>type</key>
												<string>null</string>
											</dict>
										</array>
									</dict>
									<key>value</key>
									<dict>
										<key>oneOf</key>
										<array>
											<dict>
												<key>type</key>
												<string>string</string>
											</dict>
											<dict>
												<key>type</key>
												<string>null</string>
											</dict>
										</array>
									</dict>
								</dict>
								<key>title</key>
								<string>QueryParam</string>
								<key>type</key>
								<string>object</string>
							</dict>
							<key>type</key>
							<string>array</string>
						</dict>
						<key>raw</key>
						<dict>
							<key>description</key>
							<string>The string representation of the request URL, including the protocol, host, path, hash, query parameter(s) and path variable(s).</string>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>variable</key>
						<dict>
							<key>description</key>
							<string>Postman supports path variables with the syntax `/path/:variableName/to/somewhere`. These variables are stored in this field.</string>
							<key>items</key>
							<dict>
								<key>$ref</key>
								<string>#/definitions/variable</string>
							</dict>
							<key>type</key>
							<string>array</string>
						</dict>
					</dict>
					<key>type</key>
					<string>object</string>
				</dict>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
			</array>
			<key>title</key>
			<string>Url</string>
		</dict>
		<key>variable</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>anyOf</key>
			<array>
				<dict>
					<key>required</key>
					<array>
						<string>id</string>
					</array>
				</dict>
				<dict>
					<key>required</key>
					<array>
						<string>key</string>
					</array>
				</dict>
				<dict>
					<key>required</key>
					<array>
						<string>id</string>
						<string>key</string>
					</array>
				</dict>
			</array>
			<key>description</key>
			<string>Using variables in your Postman requests eliminates the need to duplicate requests, which can save a lot of time. Variables can be defined, and referenced to from any part of a request.</string>
			<key>id</key>
			<string>#/definitions/variable</string>
			<key>properties</key>
			<dict>
				<key>description</key>
				<dict>
					<key>$ref</key>
					<string>#/definitions/description</string>
				</dict>
				<key>disabled</key>
				<dict>
					<key>default</key>
					<false/>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>id</key>
				<dict>
					<key>description</key>
					<string>A variable ID is a unique user-defined value that identifies the variable within a collection. In traditional terms, this would be a variable name.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>key</key>
				<dict>
					<key>description</key>
					<string>A variable key is a human friendly value that identifies the variable within a collection. In traditional terms, this would be a variable name.</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>name</key>
				<dict>
					<key>description</key>
					<string>Variable name</string>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>system</key>
				<dict>
					<key>default</key>
					<false/>
					<key>description</key>
					<string>When set to true, indicates that this variable has been set by Postman</string>
					<key>type</key>
					<string>boolean</string>
				</dict>
				<key>type</key>
				<dict>
					<key>description</key>
					<string>A variable may have multiple types. This field specifies the type of the variable.</string>
					<key>enum</key>
					<array>
						<string>string</string>
						<string>boolean</string>
						<string>any</string>
						<string>number</string>
					</array>
					<key>type</key>
					<string>string</string>
				</dict>
				<key>value</key>
				<dict>
					<key>description</key>
					<string>The value that a variable holds in this collection. Ultimately, the variables will be replaced by this value, when say running a set of requests from a collection</string>
				</dict>
			</dict>
			<key>title</key>
			<string>Variable</string>
			<key>type</key>
			<string>object</string>
		</dict>
		<key>variable-list</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Collection variables allow you to define a set of variables, that are a *part of the collection*, as opposed to environments, which are separate entities.
*Note: Collection variables must not contain any sensitive information.*</string>
			<key>id</key>
			<string>#/definitions/variable-list</string>
			<key>items</key>
			<dict>
				<key>$ref</key>
				<string>#/definitions/variable</string>
			</dict>
			<key>title</key>
			<string>Variable List</string>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>version</key>
		<dict>
			<key>$schema</key>
			<string>http://json-schema.org/draft-04/schema#</string>
			<key>description</key>
			<string>Postman allows you to version your collections as they grow, and this field holds the version number. While optional, it is recommended that you use this field to its fullest extent!</string>
			<key>id</key>
			<string>#/definitions/version</string>
			<key>oneOf</key>
			<array>
				<dict>
					<key>properties</key>
					<dict>
						<key>identifier</key>
						<dict>
							<key>description</key>
							<string>A human friendly identifier to make sense of the version numbers. E.g: 'beta-3'</string>
							<key>maxLength</key>
							<integer>10</integer>
							<key>type</key>
							<string>string</string>
						</dict>
						<key>major</key>
						<dict>
							<key>description</key>
							<string>Increment this number if you make changes to the collection that changes its behaviour. E.g: Removing or adding new test scripts. (partly or completely).</string>
							<key>minimum</key>
							<integer>0</integer>
							<key>type</key>
							<string>integer</string>
						</dict>
						<key>meta</key>
						<dict/>
						<key>minor</key>
						<dict>
							<key>description</key>
							<string>You should increment this number if you make changes that will not break anything that uses the collection. E.g: removing a folder.</string>
							<key>minimum</key>
							<integer>0</integer>
							<key>type</key>
							<string>integer</string>
						</dict>
						<key>patch</key>
						<dict>
							<key>description</key>
							<string>Ideally, minor changes to a collection should result in the increment of this number.</string>
							<key>minimum</key>
							<integer>0</integer>
							<key>type</key>
							<string>integer</string>
						</dict>
					</dict>
					<key>required</key>
					<array>
						<string>major</string>
						<string>minor</string>
						<string>patch</string>
					</array>
					<key>type</key>
					<string>object</string>
				</dict>
				<dict>
					<key>type</key>
					<string>string</string>
				</dict>
			</array>
			<key>title</key>
			<string>Collection Version</string>
		</dict>
	</dict>
	<key>id</key>
	<string>https://schema.getpostman.com/json/collection/v2.1.0/</string>
	<key>properties</key>
	<dict>
		<key>auth</key>
		<dict>
			<key>oneOf</key>
			<array>
				<dict>
					<key>type</key>
					<string>null</string>
				</dict>
				<dict>
					<key>$ref</key>
					<string>#/definitions/auth</string>
				</dict>
			</array>
		</dict>
		<key>event</key>
		<dict>
			<key>$ref</key>
			<string>#/definitions/event-list</string>
		</dict>
		<key>info</key>
		<dict>
			<key>$ref</key>
			<string>#/definitions/info</string>
		</dict>
		<key>item</key>
		<dict>
			<key>description</key>
			<string>Items are the basic unit for a Postman collection. You can think of them as corresponding to a single API endpoint. Each Item has one request and may have multiple API responses associated with it.</string>
			<key>items</key>
			<dict>
				<key>oneOf</key>
				<array>
					<dict>
						<key>$ref</key>
						<string>#/definitions/item</string>
					</dict>
					<dict>
						<key>$ref</key>
						<string>#/definitions/item-group</string>
					</dict>
				</array>
				<key>title</key>
				<string>Items</string>
			</dict>
			<key>type</key>
			<string>array</string>
		</dict>
		<key>protocolProfileBehavior</key>
		<dict>
			<key>$ref</key>
			<string>#/definitions/protocol-profile-behavior</string>
		</dict>
		<key>variable</key>
		<dict>
			<key>$ref</key>
			<string>#/definitions/variable-list</string>
		</dict>
	</dict>
	<key>required</key>
	<array>
		<string>info</string>
		<string>item</string>
	</array>
	<key>type</key>
	<string>object</string>
</dict>
</plist>
